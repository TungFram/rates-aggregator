plugins {
    id 'java'
    id 'war'

    id "io.freefair.lombok" version "8.1.0"


    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'ru.shtybcompany'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    runtimeOnly 'org.postgresql:postgresql'

    // https://mapstruct.org/documentation/installation/
    // Understandable guide: https://stackabuse.com/guide-to-mapstruct-in-java-advanced-mapping-library/
    // If you have problems with MapStruct&lombok: https://stackoverflow.com/questions/65955000/how-to-instruct-mapstruct-to-use-lombok-builder
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // https://mvnrepository.com/artifact/org.javamoney/moneta
    implementation 'org.javamoney:moneta:1.4.2'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.17.1'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'


    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
